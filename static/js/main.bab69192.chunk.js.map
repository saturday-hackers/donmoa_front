{"version":3,"sources":["context/authContext.ts","component/Login/index.tsx","utils/local.ts","@api/agent.ts","@api/Main/summaryApi.ts","utils/action.ts","hooks/@common/async.ts","hooks/Main/index.ts","component/Main/index.tsx","utils/format.ts","component/Calendar/index.tsx","component/ItemHistory/index.tsx","hooks/ItemList/AddItem.ts","asset/close-btn.svg","component/@common/Window.tsx","@api/ItemList/outcomeCategoriesApi.ts","@api/ItemList/outcomesApi.ts","component/ItemList/AddItem.tsx","@api/ItemList/incomesApi.ts","hooks/ItemList/index.ts","component/ItemList/index.tsx","asset/house.svg","asset/history.svg","asset/list.svg","asset/calendar.svg","component/@common/TapBar.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["authState","atom","key","default","Login","ELocalItemKeys","className","createAxiosInstance","auth","baseURL","apiInstance","axios","create","validateStatus","status","timeout","interceptors","request","use","accessToken","access_token","window","localStorage","getItem","headers","Authorization","response","error","message","data","Promise","reject","Error","ApiAgent","axiosInstance","postRequest","url","config","a","stringify","qs","post","res","getRequest","params","get","putRequest","put","deleteRequest","delete","this","authApiAgent","summaryApi","success","createLocallyReducer","state","action","produce","useAsync","callback","initialState","deps","skip","reducer","useReducer","loading","dispatch","fetchData","draft","useEffect","initialSummaryState","income","outcome","remain","useMain","monthly_income","monthly_outcome","remain_outcome","Main","size","priceString","makeDayId","dateObj","moment","format","Calendar","useState","selectDayId","setSelectDayId","year","setYear","month","setMonth","table","days","lastDate","Date","getDate","startDay","getDay","lastDay","forEach","week","index","push","prevDay","prevDate","i","dayObj","newDayId","isToday","isSelect","onClick","nextDay","nextDate","length","map","makeTable","ItemHistory","EItemType","ECycleType","Window","children","closeFunc","src","closeBtn","alt","outcomeCategoriesApi","EIntervalType","initialFormState","type","name","price","date","cycle","category_id","categories","id","customCategory","remind","useAddItem","setType","useCallback","setName","str","setDate","setCategory","setCustomCategory","setPrice","setCycle","toggleRemind","AddItem","value","inputSize","onChange","e","currentTarget","Number","c","placeholder","rounded","outcomesApi","incomesApi","console","log","initialItemList","useItemList","outcomes","incomes","ItemList","addPopUp","setAddPopUp","outcomesView","useMemo","started_date","category_name","interval_type","interval_value","enabled_remind","incomesView","fullWidth","TapBar","pathname","useLocation","to","main","calendar","list","history","App","isAuth","useRecoilValue","routes","exact","path","component","History","List","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bab69192.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const authState = atom({\n  key: \"auth_state\", // unique ID (with respect to other atoms/selectors)\n  default: true, // default value (aka initial value)\n});\n","import React from \"react\";\nimport \"../../style/Login/index.scss\";\n\nfunction Login() {\n  return <div className=\"Login\">로그인 페이지</div>;\n}\n\nexport default Login;\n","export enum ELocalItemKeys {\n  access_token = \"access_token\",\n}\n\nexport const getLocalItem = (key: ELocalItemKeys) => {\n  return window.localStorage.getItem(key);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\nimport qs from \"query-string\";\nimport { ELocalItemKeys, getLocalItem } from \"../utils/local\";\n\nexport interface IApiReturn {\n  success: boolean;\n  poll?: boolean;\n  message?: string;\n  error?: Error;\n}\n\nexport const DEFAULT_TIMEOUT = 600000;\n\nconst createAxiosInstance = (auth: boolean, baseURL: string) => {\n  const apiInstance: AxiosInstance = axios.create({\n    baseURL,\n    validateStatus: (status) => status >= 200 && status < 400,\n    timeout: DEFAULT_TIMEOUT,\n  });\n\n  apiInstance.interceptors.request.use((request) => {\n    const accessToken = getLocalItem(ELocalItemKeys.access_token);\n    if (auth && accessToken) request.headers.Authorization = `${accessToken}`;\n\n    return request;\n  });\n\n  apiInstance.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      if (error.response) {\n        const message = error.response.data.message;\n        const status = error.response.status;\n        return Promise.reject(new Error(`${status}:${message}`));\n      }\n      return Promise.reject(error);\n    }\n  );\n\n  return apiInstance;\n};\n\nclass ApiAgent {\n  private axiosInstance: AxiosInstance;\n\n  constructor(auth: boolean) {\n    this.axiosInstance = createAxiosInstance(\n      auth,\n      \"https://donmoa-main.herokuapp.com/api\"\n    );\n  }\n\n  postRequest = async (url: string, data?: any, config?: any): Promise<any> => {\n    let res;\n    if (config?.stringify) data = qs.stringify(data);\n    try {\n      res = await this.axiosInstance.post(url, data, config);\n    } catch (err) {\n      throw err;\n    }\n    return res;\n  };\n\n  getRequest = async (\n    url: string,\n    params?: any,\n    headers?: any\n  ): Promise<any> => {\n    let res;\n    try {\n      res = await this.axiosInstance.get(url, { params, headers });\n    } catch (err) {\n      throw err;\n    }\n    return res;\n  };\n\n  putRequest = async (url: string, data?: any, config?: AxiosRequestConfig) => {\n    let res;\n    try {\n      res = await this.axiosInstance.put(url, data, config);\n    } catch (err) {\n      throw err;\n    }\n    return res;\n  };\n\n  deleteRequest = async (url: string, params?: any): Promise<any> => {\n    let res;\n    try {\n      res = await this.axiosInstance.delete(url, { params });\n    } catch (err) {\n      throw err;\n    }\n    return res;\n  };\n}\n\nexport const authApiAgent = new ApiAgent(true);\nexport const unauthApiAgent = new ApiAgent(false);\n","import { IApiReturn, authApiAgent } from \"../agent\";\n\nexport interface ISummaryApiReturn extends IApiReturn {\n  data?: {\n    monthly_income: number;\n    monthly_outcome: number;\n    remain_outcome: number;\n  };\n}\n\nconst summaryApi = async (): Promise<ISummaryApiReturn> => {\n  const { getRequest } = authApiAgent;\n\n  try {\n    const res = await getRequest(\"/summary\");\n\n    if (res.status === 200) {\n      return {\n        success: true,\n        data: res.data,\n      };\n    }\n  } catch (err) {\n    return {\n      success: false,\n      error: err,\n    };\n  }\n\n  return { success: false, error: new Error() };\n};\n\nexport default summaryApi;\n","import produce from \"immer\";\n\nexport const createLocallyReducer = <T>() => (\n  state: T,\n  action: (draft: T) => void\n): T => produce(state, action);\n","import { useReducer, useEffect } from \"react\";\nimport { createLocallyReducer } from \"../../utils/action\";\n\nexport interface IAsync<T> {\n  loading: boolean;\n  data: T;\n  error: Error | null;\n}\n\nfunction useAsync<T>(\n  callback: () => Promise<T>,\n  initialState: T,\n  deps = [],\n  skip: boolean = false\n): [IAsync<T>, () => Promise<void>] {\n  const reducer = createLocallyReducer<IAsync<T>>();\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    data: initialState,\n    error: null,\n  });\n\n  const fetchData = async () => {\n    dispatch((draft) => {\n      draft.loading = true;\n    });\n    try {\n      const data = await callback();\n      dispatch((draft) => {\n        draft.loading = false;\n        draft.data = data;\n      });\n    } catch (e) {\n      dispatch((draft) => {\n        draft.error = e;\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (skip) return;\n    fetchData();\n    // eslint-disable-next-line\n  }, deps);\n\n  return [state, fetchData];\n}\n\nexport default useAsync;\n","import summaryApi from \"../../@api/Main/summaryApi\";\nimport useAsync from \"../@common/async\";\n\nexport interface ISummaryState {\n  income: number;\n  outcome: number;\n  remain: number;\n}\n\nexport const initialSummaryState = {\n  income: 0,\n  outcome: 0,\n  remain: 0,\n};\n\nconst useMain = () => {\n  const [state] = useAsync<ISummaryState>(async () => {\n    const res = await summaryApi();\n    if (res.success && res.data)\n      return {\n        income: res.data.monthly_income,\n        outcome: res.data.monthly_outcome,\n        remain: res.data.remain_outcome,\n      };\n    else {\n      if (res.error) throw res.error;\n      else throw new Error();\n    }\n  }, initialSummaryState);\n\n  return state.data;\n};\n\nexport default useMain;\n","import { Text } from \"doodlin-design-system\";\nimport React from \"react\";\nimport { priceString } from \"dhj-string\";\n\nimport \"../../style/Main/index.scss\";\nimport useMain from \"../../hooks/Main\";\n\nfunction Main() {\n  const { income, outcome, remain } = useMain();\n  return (\n    <div className=\"Main\">\n      <div className=\"logo\">돈모아</div>\n      <div className=\"content\">\n        <div className=\"attr\">\n          <div className=\"label\">남은 고정 지출</div>\n          <Text size=\"tit-xxxl\" className=\"remain\">\n            {priceString(remain)}\n            <span className=\"won\">원</span>\n          </Text>\n        </div>\n        <div className=\"attr\">\n          <div className=\"label\">월별 고정 지출 및 수입</div>\n          <Text size=\"tit-xxl\" className=\"outcome\">\n            -{priceString(outcome)}\n            <span className=\"won\">원</span>\n          </Text>\n          <Text size=\"tit-xxl\" className=\"income\">\n            +{priceString(income)}\n            <span className=\"won\">원</span>\n          </Text>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","import moment from \"moment\";\n\nexport const makeDayId = (dateObj: Date) => {\n  return moment(dateObj).format(\"YYYYMMDD\");\n};\n","import React, { useState } from \"react\";\nimport { Button } from \"doodlin-design-system\";\nimport \"../../style/Calendar/index.scss\";\nimport { makeDayId } from \"../../utils/format\";\nimport moment from \"moment\";\n\nconst makeTable = (\n  year: number,\n  month: number,\n  selectDayId: string,\n  setSelectDayId: (param: string) => void\n) => {\n  const days = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n  const table: any[][] = [[], [], [], [], [], [], []];\n\n  const lastDate = new Date(year, month + 1, 0).getDate();\n  const startDay = new Date(year, month, 1).getDay();\n  const lastDay = new Date(year, month + 1, 0).getDay();\n\n  table.forEach((week, index) => {\n    week.push(\n      <div className=\"date-name\" key={`dateName${index}`}>\n        {days[index]}\n      </div>\n    );\n  });\n\n  let prevDay = startDay - 1;\n  let prevDate = new Date(year, month, 0).getDate();\n\n  while (prevDay >= 0) {\n    table[prevDay].push(\n      <div className=\"day prev\" key={prevDate}>\n        {prevDate}\n      </div>\n    );\n    prevDate = prevDate - 1;\n    prevDay = prevDay - 1;\n  }\n\n  for (let i = 1; i <= lastDate; i += 1) {\n    const dayObj = new Date(year, month, i);\n    const newDayId = makeDayId(dayObj);\n    const isToday = newDayId === makeDayId(new Date());\n    const isSelect = selectDayId === makeDayId(dayObj);\n\n    table[dayObj.getDay()].push(\n      <div\n        key={newDayId}\n        className={`day ${isSelect ? \"select\" : \"\"} ${isToday ? \"today\" : \"\"}`}\n        onClick={() => {\n          setSelectDayId(newDayId);\n        }}\n      >\n        {i}\n      </div>\n    );\n  }\n\n  let nextDay = lastDay + 1;\n  let nextDate = 1;\n\n  while (nextDay <= 6) {\n    table[nextDay].push(\n      <div className=\"day next\" key={nextDay}>\n        {nextDate}\n      </div>\n    );\n    nextDate = nextDate + 1;\n    nextDay = nextDay + 1;\n  }\n\n  if (table[0].length < 7) {\n    for (let i = 0; i < 7; i += 1) {\n      table[i].push(\n        <div className=\"day next\" key={nextDay}>\n          {nextDate}\n        </div>\n      );\n      nextDate = nextDate + 1;\n    }\n  }\n\n  return table.map((week, index) => {\n    return (\n      <div key={index} className={`table ${days[index]}`}>\n        {week}\n      </div>\n    );\n  });\n};\n\nconst Calendar: React.FC = () => {\n  const [selectDayId, setSelectDayId] = useState<string>(\"\");\n  const [year, setYear] = useState(moment().year());\n  const [month, setMonth] = useState(moment().month());\n\n  const prevMonth = () => {\n    if (month >= 1) {\n      setMonth(month - 1);\n    } else {\n      setYear(year - 1);\n      setMonth(11);\n    }\n  };\n\n  const nextMonth = () => {\n    if (month < 11) {\n      setMonth(month + 1);\n    } else {\n      setYear(year + 1);\n      setMonth(0);\n    }\n  };\n\n  const table = makeTable(year, month, selectDayId, setSelectDayId);\n\n  return (\n    <div className=\"Calendar\">\n      <div className=\"content\">\n        <div className=\"year\">{year}</div>\n        <div className=\"calendar-flex\">\n          <Button onClick={prevMonth} size=\"xs\">\n            &#xE000;\n          </Button>\n          <div className=\"month\">{month + 1}월</div>\n          <Button onClick={nextMonth} size=\"xs\">\n            &#xE001;\n          </Button>\n        </div>\n        <div className=\"calendar-table\">{table}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport \"../../style/ItemHistory/index.scss\";\n\nfunction ItemHistory() {\n  return <div className=\"ItemHistory\">고정지출 변화 페이지</div>;\n}\n\nexport default ItemHistory;\n","import { useCallback, useEffect, useReducer } from \"react\";\nimport outcomeCategoriesApi, {\n  IOutcomeCategories,\n} from \"../../@api/ItemList/outcomeCategoriesApi\";\nimport { createLocallyReducer } from \"../../utils/action\";\nimport { makeDayId } from \"../../utils/format\";\n\nexport enum EItemType {\n  outcome = \"outcome\",\n  income = \"income\",\n}\n\nexport enum ECycleType {\n  month = \"month\",\n  year = \"year\",\n}\n\nexport interface IFormState {\n  type: EItemType;\n  name: string;\n  price: number;\n  date: string;\n  cycle: ECycleType | number;\n  category_id: string;\n  categories: IOutcomeCategories[];\n  customCategory: string;\n  remind: boolean;\n}\n\nexport const initialFormState: IFormState = {\n  type: EItemType.outcome,\n  name: \"\",\n  price: 0,\n  date: makeDayId(new Date()),\n  cycle: ECycleType.month,\n  category_id: \"custom\",\n  categories: [{ id: \"custom\", name: \"카테고리 추가\" }],\n  customCategory: \"\",\n  remind: true,\n};\n\nconst useAddItem = () => {\n  const reducer = createLocallyReducer<IFormState>();\n\n  const [state, dispatch] = useReducer(reducer, initialFormState);\n\n  const setType = useCallback((type: EItemType) => {\n    dispatch((draft) => {\n      draft.type = type;\n    });\n  }, []);\n\n  const setName = useCallback((str: string) => {\n    dispatch((draft) => {\n      draft.name = str;\n    });\n  }, []);\n\n  const setDate = useCallback((str: string) => {\n    dispatch((draft) => {\n      draft.date = str;\n    });\n  }, []);\n\n  const setCategory = useCallback((str: string) => {\n    dispatch((draft) => {\n      draft.category_id = str;\n    });\n  }, []);\n\n  const setCustomCategory = useCallback((str: string) => {\n    dispatch((draft) => {\n      draft.customCategory = str;\n    });\n  }, []);\n\n  const setPrice = useCallback((price: number) => {\n    dispatch((draft) => {\n      draft.price = price;\n    });\n  }, []);\n\n  const setCycle = useCallback((cycle: ECycleType | number) => {\n    dispatch((draft) => {\n      draft.cycle = cycle;\n    });\n  }, []);\n\n  const toggleRemind = useCallback(() => {\n    dispatch((draft) => {\n      draft.remind = !draft.remind;\n    });\n  }, []);\n\n  useEffect(() => {\n    const request = async () => {\n      const res = await outcomeCategoriesApi();\n      if (res.success) {\n        dispatch((draft) => {\n          if (res.data) {\n            draft.categories = [\n              ...res.data,\n              { id: \"custom\", name: \"카테고리 추가\" },\n            ];\n            draft.category_id = res.data[0].id;\n          }\n        });\n      }\n    };\n\n    request();\n  }, []);\n\n  return {\n    ...state,\n    action: {\n      setType,\n      setName,\n      setDate,\n      setCategory,\n      setCustomCategory,\n      setPrice,\n      setCycle,\n      toggleRemind,\n    },\n  };\n};\n\nexport default useAddItem;\n","export default __webpack_public_path__ + \"static/media/close-btn.00bd7cde.svg\";","import React from \"react\";\nimport closeBtn from \"../../asset/close-btn.svg\";\n\nconst Window: React.FC<{ closeFunc: () => void }> = ({\n  children,\n  closeFunc,\n}) => {\n  return (\n    <div className=\"Window\">\n      <div className=\"content-box\">\n        <img src={closeBtn} alt=\"\" onClick={closeFunc} className=\"close-btn\" />\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Window;\n","import { IApiReturn, authApiAgent } from \"../agent\";\n\nexport interface IOutcomeCategories {\n  id: string;\n  name: string;\n}\n\nexport interface IOutcomesApiReturn extends IApiReturn {\n  data?: IOutcomeCategories[];\n}\n\nconst outcomeCategoriesApi = async (): Promise<IOutcomesApiReturn> => {\n  const { getRequest } = authApiAgent;\n\n  try {\n    const res = await getRequest(\"/outcome/categories\");\n\n    if (res.status === 200) {\n      return {\n        success: true,\n        data: res.data,\n      };\n    }\n  } catch (err) {\n    return {\n      success: false,\n      error: err,\n    };\n  }\n\n  return { success: false, error: new Error() };\n};\n\nexport default outcomeCategoriesApi;\n","import { IApiReturn, authApiAgent } from \"../agent\";\n\nexport enum EIntervalType {\n  default = \"default\",\n  custom = \"custom\",\n}\n\nexport interface IOutcomes {\n  category_id: string;\n  category_name: string;\n  created_at: string;\n  enabled_remind: boolean;\n  id: string;\n  interval_type: EIntervalType;\n  interval_value: number;\n  name: string;\n  price: number;\n  started_date: string;\n}\n\nexport interface IOutcomesApiReturn extends IApiReturn {\n  data?: IOutcomes[];\n}\n\nconst outcomesApi = async (): Promise<IOutcomesApiReturn> => {\n  const { getRequest } = authApiAgent;\n\n  try {\n    const res = await getRequest(\"/outcomes\");\n\n    if (res.status === 200) {\n      return {\n        success: true,\n        data: res.data,\n      };\n    }\n  } catch (err) {\n    return {\n      success: false,\n      error: err,\n    };\n  }\n\n  return { success: false, error: new Error() };\n};\n\nexport default outcomesApi;\n","import { Button, Input, Text } from \"doodlin-design-system\";\nimport React from \"react\";\nimport useAddItem, {\n  ECycleType,\n  EItemType,\n} from \"../../hooks/ItemList/AddItem\";\nimport \"../../style/ItemList/AddItem.scss\";\n\nconst AddItem: React.FC = () => {\n  const {\n    type,\n    name,\n    price,\n    date,\n    cycle,\n    category_id,\n    customCategory,\n    categories,\n    remind,\n    action: {\n      setType,\n      setName,\n      setPrice,\n      setDate,\n      setCategory,\n      setCustomCategory,\n      setCycle,\n      toggleRemind,\n    },\n  } = useAddItem();\n\n  return (\n    <div className=\"AddItem\">\n      <Text size=\"tit-lg\">항목 추가</Text>\n      <div className=\"attr type\">\n        <div className=\"label\">종류</div>\n        <Button\n          onClick={() => setType(EItemType.outcome)}\n          size=\"xxs\"\n          className={`outcome ${type === EItemType.outcome ? \"current\" : \"\"}`}\n        >\n          지출\n        </Button>\n        <Button\n          onClick={() => setType(EItemType.income)}\n          size=\"xxs\"\n          className={`income ${type === EItemType.income ? \"current\" : \"\"}`}\n        >\n          수입\n        </Button>\n      </div>\n      <div className=\"attr name\">\n        <div className=\"label\">이름</div>\n        <Input\n          value={name}\n          inputSize=\"sm\"\n          onChange={(e) => setName(e.currentTarget.value)}\n        />\n      </div>\n      <div className=\"attr price\">\n        <div className=\"label\">가격</div>\n        <Input\n          type=\"number\"\n          value={price}\n          inputSize=\"sm\"\n          onChange={(e) => setPrice(Number(e.currentTarget.value))}\n        />\n      </div>\n      <div className=\"attr date\">\n        <div className=\"label\">시작일</div>\n        <Input\n          value={date}\n          inputSize=\"sm\"\n          onChange={(e) => setDate(e.currentTarget.value)}\n        />\n      </div>\n      <div className=\"attr cycle\">\n        <div className=\"label\">주기</div>\n        <Button\n          onClick={() => setCycle(ECycleType.month)}\n          size=\"xxs\"\n          className={`month ${cycle === ECycleType.month ? \"current\" : \"\"}`}\n        >\n          월\n        </Button>\n        <Button\n          onClick={() => setCycle(ECycleType.year)}\n          size=\"xxs\"\n          className={`year ${cycle === ECycleType.year ? \"current\" : \"\"}`}\n        >\n          년\n        </Button>\n        <Button\n          onClick={() => setCycle(30)}\n          size=\"xxs\"\n          className={`custom ${typeof cycle === \"number\" ? \"current\" : \"\"}`}\n        >\n          커스텀\n        </Button>\n      </div>\n      {typeof cycle === \"number\" && (\n        <Input\n          inputSize=\"xxs\"\n          value={cycle}\n          className={`custom-input`}\n          onChange={(e) => setCycle(Number(e.currentTarget.value))}\n        />\n      )}\n      <div className=\"attr category\">\n        <div className=\"label\">카테고리</div>\n        <select\n          className=\"category-select\"\n          value={category_id}\n          onChange={(e) => setCategory(e.currentTarget.value)}\n        >\n          {categories.map((c) => (\n            <option value={c.id}>{c.name}</option>\n          ))}\n        </select>\n      </div>\n      {category_id === \"custom\" && (\n        <Input\n          className=\"custom-category\"\n          value={customCategory}\n          inputSize=\"xxs\"\n          placeholder=\"카테고리 입력\"\n          onChange={(e) => setCustomCategory(e.currentTarget.value)}\n        />\n      )}\n      {type === EItemType.outcome && (\n        <div className=\"attr remind\">\n          <div className=\"label\">리마인드 여부</div>\n          <Button\n            rounded\n            size=\"xxs\"\n            className={`remind-btn ${remind ? \"current\" : \"\"}`}\n            onClick={toggleRemind}\n          />\n        </div>\n      )}\n      <div className={`btn-area`}>\n        <Button className=\"submit-btn\" size=\"sm\">\n          등록\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddItem;\n","import { IApiReturn, authApiAgent } from \"../agent\";\nimport { EIntervalType } from \"./outcomesApi\";\n\nexport interface IIncomes {\n  category_id: string;\n  category_name: string;\n  created_at: string;\n  id: string;\n  interval_type: EIntervalType;\n  interval_value: number;\n  name: string;\n  price: number;\n  started_date: string;\n}\n\nexport interface IIncomesApiReturn extends IApiReturn {\n  data?: IIncomes[];\n}\n\nconst incomesApi = async (): Promise<IIncomesApiReturn> => {\n  const { getRequest } = authApiAgent;\n\n  try {\n    const res = await getRequest(\"/incomes\");\n\n    console.log(res);\n    if (res.status === 200) {\n      return {\n        success: true,\n        data: res.data,\n      };\n    }\n  } catch (err) {\n    return {\n      success: false,\n      error: err,\n    };\n  }\n\n  return { success: false, error: new Error() };\n};\n\nexport default incomesApi;\n","import outcomesApi, { IOutcomes } from \"../../@api/ItemList/outcomesApi\";\nimport incomesApi, { IIncomes } from \"../../@api/ItemList/incomesApi\";\nimport useAsync from \"../@common/async\";\n\nexport const initialItemList: IOutcomes[] = [];\n\nconst useItemList = () => {\n  const [{ data: outcomes }] = useAsync<IOutcomes[]>(async () => {\n    const res = await outcomesApi();\n\n    if (res.data) return res.data;\n    else throw res.error ? res.error : new Error();\n  }, initialItemList);\n\n  const [{ data: incomes }] = useAsync<IIncomes[]>(async () => {\n    const res = await incomesApi();\n\n    if (res.data) return res.data;\n    else throw res.error ? res.error : new Error();\n  }, initialItemList);\n\n  return { outcomes, incomes };\n};\n\nexport default useItemList;\n","import { Button, Text } from \"doodlin-design-system\";\nimport React, { useMemo, useState } from \"react\";\nimport Window from \"../@common/Window\";\nimport AddItem from \"./AddItem\";\nimport \"../../style/ItemList/index.scss\";\nimport useItemList from \"../../hooks/ItemList\";\nimport { EIntervalType } from \"../../@api/ItemList/outcomesApi\";\nimport { priceString } from \"dhj-string\";\nimport moment from \"moment\";\n\nfunction ItemList() {\n  const { outcomes, incomes } = useItemList();\n  const [addPopUp, setAddPopUp] = useState(false);\n\n  const outcomesView = useMemo(() => {\n    return outcomes.map(\n      ({\n        id,\n        started_date,\n        name,\n        category_name,\n        category_id,\n        interval_type,\n        interval_value,\n        price,\n        enabled_remind,\n      }) => (\n        <div className=\"outcome\" key={id}>\n          <div className=\"start-date attr\">\n            {interval_type === EIntervalType.default\n              ? interval_value === 1\n                ? `매달 ${moment(started_date).format(\"D일\")}`\n                : \"일 년 주기\"\n              : `${interval_value}일 주기`}\n          </div>\n          <div className=\"name attr\">\n            <div className={`category ${category_id}`}>{category_name}</div>\n            {name}\n          </div>\n          <div className=\"price attr\">{priceString(price)}원</div>\n          <Button\n            size=\"xxs\"\n            className={`alarm ${enabled_remind ? \"active\" : \"non_active\"}`}\n          >\n            알람\n          </Button>\n        </div>\n      )\n    );\n  }, [outcomes]);\n\n  const incomesView = useMemo(() => {\n    return incomes.map(\n      ({\n        id,\n        started_date,\n        name,\n        category_name,\n        category_id,\n        interval_type,\n        interval_value,\n        price,\n      }) => (\n        <div className=\"income\" key={id}>\n          <div className=\"start-date attr\">\n            {interval_type === EIntervalType.default\n              ? interval_value === 1\n                ? `매달 ${moment(started_date).format(\"D일\")}`\n                : \"일 년 주기\"\n              : `${interval_value}일 주기`}\n          </div>\n          <div className=\"name attr\">\n            <div className={`category ${category_id}`}>{category_name}</div>\n            {name}\n          </div>\n          <div className=\"price attr\">{priceString(price)}원</div>\n        </div>\n      )\n    );\n  }, [incomes]);\n\n  return (\n    <div className=\"ItemList\">\n      {addPopUp && (\n        <Window closeFunc={() => setAddPopUp(false)}>\n          <AddItem />\n        </Window>\n      )}\n      <div className=\"content\">\n        <Button onClick={() => setAddPopUp(true)} className=\"add-btn\" fullWidth>\n          새 항목 등록하기 +\n        </Button>\n        <div className=\"outcomes\">\n          <Text size=\"tit-md\">고정지출 목록</Text>\n          <div className=\"contents\">{outcomesView}</div>\n        </div>\n        <div className=\"incomes\">\n          <Text size=\"tit-md\">고정수입 목록</Text>\n          <div className=\"contents\">{incomesView}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ItemList;\n","export default __webpack_public_path__ + \"static/media/house.4e6891a1.svg\";","export default __webpack_public_path__ + \"static/media/history.b71749aa.svg\";","export default __webpack_public_path__ + \"static/media/list.eca1df60.svg\";","export default __webpack_public_path__ + \"static/media/calendar.8c677f88.svg\";","import { Text } from \"doodlin-design-system\";\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"../../style/ItemHistory/index.scss\";\nimport main from \"../../asset/house.svg\";\nimport history from \"../../asset/history.svg\";\nimport list from \"../../asset/list.svg\";\nimport calendar from \"../../asset/calendar.svg\";\n\nfunction TapBar() {\n  const { pathname } = useLocation();\n  return (\n    <div className=\"TapBar\">\n      <Link to=\"/\">\n        <Text className={`tab main ${pathname === \"/\" ? \"current\" : \"\"}`}>\n          <img src={main} alt=\"\" />\n        </Text>\n      </Link>\n      <Link to=\"/calendar\">\n        <Text\n          className={`tab calendar ${\n            pathname === \"/calendar\" ? \"current\" : \"\"\n          }`}\n        >\n          <img src={calendar} alt=\"\" />\n        </Text>\n      </Link>\n      <Link to=\"/list\">\n        <Text className={`tab list ${pathname === \"/list\" ? \"current\" : \"\"}`}>\n          <img src={list} alt=\"\" />\n        </Text>\n      </Link>\n      <Link to=\"/history\">\n        <Text\n          className={`tab history ${pathname === \"/history\" ? \"current\" : \"\"}`}\n        >\n          <img src={history} alt=\"\" />\n        </Text>\n      </Link>\n    </div>\n  );\n}\n\nexport default TapBar;\n","import React, { useMemo } from \"react\";\nimport \"./style/App.scss\";\nimport { useRecoilValue } from \"recoil\";\nimport { authState } from \"./context/authContext\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./component/Login\";\nimport Main from \"./component/Main\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Calendar from \"./component/Calendar\";\nimport History from \"./component/ItemHistory\";\nimport List from \"./component/ItemList\";\nimport TapBar from \"./component/@common/TapBar\";\n\nfunction App() {\n  const isAuth = useRecoilValue(authState);\n\n  const routes = useMemo(() => {\n    if (isAuth) {\n      return [\n        <Route exact path=\"/\" component={Main} key={\"/\"} />,\n        <Route path=\"/calendar\" component={Calendar} key={\"/calendar\"} />,\n        <Route path=\"/history\" component={History} key={\"/history\"} />,\n        <Route path=\"/list\" component={List} key={\"/list\"} />,\n      ];\n    } else {\n      return [<Route path=\"/\" component={Login} key={\"/\"} />];\n    }\n  }, [isAuth]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          {routes}\n          <Redirect to=\"/\" />\n        </Switch>\n        {isAuth && <TapBar />}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log(\n      \"won't register serviceWorker. Current env:\",\n      process.env.NODE_ENV\n    );\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      console.log(\"serviceWorker is registered\");\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\nimport \"./style/index.scss\";\nimport \"./style/reset.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}